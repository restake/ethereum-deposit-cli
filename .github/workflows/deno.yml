---
name: "Deno"

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: "build"
    runs-on: "ubuntu-latest"

    steps:
      - id: "checkout"
        name: "Checkout code"
        uses: actions/checkout@v4

      - id: "setup"
        name: "Setup Deno"
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - id: "build"
        name: "Verify formatting"
        run: deno compile --unstable -A ./bin/ethereum-deposit-cli.ts

  test:
    name: "test"
    needs: "build"
    runs-on: "ubuntu-latest"

    steps:
      - id: "checkout"
        name: "Checkout code"
        uses: actions/checkout@v4

      - id: "setup"
        name: "Setup Deno"
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - id: "test"
        name: "Run tests with coverage"
        run: deno test -A --coverage="./coverage"

      - id: "convert_coverage"
        name: "Convert coverage reports to Codecov format"
        run: deno coverage --lcov ./coverage > coverage.lcov

      - id: "upload_coverage"
        name: "Upload coverage reports to Codecov"
        uses: codecov/codecov-action@v3
        with:
          file: "coverage.lcov"
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: "lint"
    needs: "build"
    runs-on: "ubuntu-latest"

    steps:
      - id: "checkout"
        name: "Checkout code"
        uses: actions/checkout@v4

      - id: "setup"
        name: "Setup Deno"
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - id: "check_fmt"
        name: "Verify formatting"
        run: deno fmt --check

      - id: "lint"
        name: "Run linter"
        run: deno lint
